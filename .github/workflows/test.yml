name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Check code formatting with ruff
      run: |
        poetry run ruff check src/ tests/
        poetry run ruff format --check src/ tests/

    - name: Type check with mypy
      run: poetry run mypy src/ --ignore-missing-imports

    - name: Run core tests
      run: |
        poetry run pytest tests/unit/test_mcp_server.py \
                        tests/unit/test_utils.py::TestImportStructure \
                        tests/unit/test_utils.py::TestProjectStructure \
                        tests/unit/test_config.py::TestConfigurationLoading::test_server_config_constants \
                        tests/unit/test_config.py::TestConfigurationLoading::test_conductor_config_constants \
                        tests/unit/test_api.py::TestHealthEndpoint \
                        -v --tb=short --cov=src --cov-report=xml

    - name: Run integration tests
      run: |
        poetry run pytest tests/integration/test_app_integration.py::TestApplicationLifespan::test_app_creation_without_mcp_startup \
                        tests/integration/test_app_integration.py::TestApplicationLifespan::test_cors_middleware_enabled \
                        -v --tb=short

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false